@{
    ViewData["Title"] = "FirstAjax";
}

<h1>FirstAjax</h1>
<input type="text" id="txt1" />
<button class="btn btn-dark" id="btn1">click</button>
<button class="btn btn-dark" id="btn2">取消</button>
<div class="alert-info mt-3 p-3" id="div1">aaaaa</div>

@section Scripts{
    <script>
        const btn1 = document.querySelector(`#btn1`);
        const btn2 = document.querySelector(`#btn2`);
        const div = document.querySelector(`#div1`);
        const txt = document.querySelector(`#txt1`);
        //步驟一建立Ajax物件
        const xhr = new XMLHttpRequest();
        btn2.addEventListener("click",()=>{
            xhr.abort();
        })
        //步驟三接收伺服器回傳的結果(XMLHttpRequest物件有些事件會有執行緒問題，所以在send前綁定避免)
        xhr.addEventListener("load", () => {
            var data = xhr.responseText;//取得後端回來資料
            div.innerHTML += `<h1>${data}</h1>`;
        })

        xhr.addEventListener("loadstart", () => {
            div.innerHTML += `<h1>Ajax開始</h1>`;
        });

        xhr.addEventListener("loadend", () => {
            div.innerHTML += `<h1>Ajax結束</h1>`;
        });

        xhr.addEventListener("timeout", () => {
            div.innerHTML += `<h1>伺服器忙碌中</h1>`;
        });

        btn1.addEventListener("click", () => {
            //步驟二發出要求
            //open("Http Method(GET、POST、PUT、DELETE)", "伺服器端的程式", 同步或非同步(預設))
            xhr.open("GET", `@Url.Content("~/Api/Index?name=${txt.value}")`);
            //xhr.timeout = 3000;
            xhr.send();
        });

        xhr.addEventListener("abort", () => {
            div.innerHTML += `<h1>您結束</h1>`;
        });

    </script>
}

